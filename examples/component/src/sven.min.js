(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define(factory);
	else if(typeof exports === 'object')
		exports["Svenjs"] = factory();
	else
		root["Svenjs"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _componentVersion = __webpack_require__(17);

	var _componentUpdateUi = __webpack_require__(1);

	var _componentSaveState = __webpack_require__(5);

	var _componentTimeTravel = __webpack_require__(16);

	var _componentSetState = __webpack_require__(6);

	var _componentCreateComponent = __webpack_require__(12);

	var _componentLifeCycle = __webpack_require__(3);

	var _componentRender = __webpack_require__(15);

	var _storeCreateStore = __webpack_require__(18);

	var _libDeepCopy = __webpack_require__(4);

	var _componentJsx = __webpack_require__(14);

	var _componentCreateElement = __webpack_require__(13);

	exports.version = _componentVersion.version;
	exports.updateUI = _componentUpdateUi.updateUI;
	exports.setState = _componentSetState.setState;
	exports.createStore = _storeCreateStore.createStore;
	exports.createElement = _componentCreateElement.createElement;
	exports.createComponent = _componentCreateComponent.createComponent;
	exports.render = _componentRender.render;
	exports.jsx = _componentJsx.jsx;
	exports.lifeCycle = _componentLifeCycle.lifeCycle;
	exports.timeTravel = _componentTimeTravel.timeTravel;
	exports.saveState = _componentSaveState.saveState;
	exports.deepCopy = _libDeepCopy.deepCopy;

/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";

	exports.updateUI = function (spec, html, time) {};

	/*
	 console.log('updateUI');
	 if(spec) _spec=spec;
	 spec = spec || _spec;
	 //console.log(spec);
	 //let rootNode = spec._svenjs.rootNode;
	 const rootNode = document.getElementById('ui');
	  time = time || spec.time;
	 html = html || spec.render(spec.state)
	 //if (JSON.stringify(rootNode.innerHTML) === JSON.stringify(html)) {
	 //  return;
	 //}
	 //rootNode.innerHTML = "";
	 if (typeof html === "string") {
	   rootNode.appendChild(
	     document.createRange().createContextualFragment(html)
	   );
	 } else if(html) {
	     //console.log(rootNode);
	     //console.log(html);
	     rootNode.appendChild(html);
	 }
	 
	*/

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var slice = Array.prototype.slice;
	var isArgs = __webpack_require__(11);
	var hasDontEnumBug = !({ 'toString': null }).propertyIsEnumerable('toString');
	var hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var blacklistedKeys = {
		$window: true,
		$console: true,
		$parent: true,
		$self: true,
		$frames: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			if (!blacklistedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
				try {
					equalsConstructorPrototype(window[k]);
				} catch (e) {
					return true;
				}
			}
		}
		return false;
	}());

	var keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = hasAutomationEqualityBug || equalsConstructorPrototype(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};

	keysShim.shim = function shimObjectKeys() {
		if (!Object.keys) {
			Object.keys = keysShim;
		} else {
			var keysWorksWithArguments = (function () {
				// Safari 5.0 bug
				return (Object.keys(arguments) || '').length === 2;
			}(1, 2));
			if (!keysWorksWithArguments) {
				var originalKeys = Object.keys;
				Object.keys = function keys(object) {
					if (isArgs(object)) {
						return originalKeys(slice.call(object));
					} else {
						return originalKeys(object);
					}
				};
			}
		}
		return Object.keys || keysShim;
	};

	module.exports = keysShim;


/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";

	exports.lifeCycle = function (spec) {
		if (spec.isMounted) {
			spec.componentDidUpdate.apply(spec);
		}
	};

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';

	var deepCopy = exports.deepCopy = function (obj) {
	  if (obj === null || typeof obj !== 'object' || 'isActiveClone' in obj) return obj;
	  var temp = obj.constructor();
	  for (var key in obj) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) {
	      obj['isActiveClone'] = null;
	      temp[key] = deepCopy(obj[key]);
	      delete obj['isActiveClone'];
	    }
	  }
	  return temp;
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _libDeepCopy = __webpack_require__(4);

	exports.saveState = function (time, state) {
	  time = time || { history: [], pos: -1 };
	  time.history.splice(time.pos + 1);
	  time.history.push(_libDeepCopy.deepCopy(state));
	  time.pos++;
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _updateUi = __webpack_require__(1);

	var _saveState = __webpack_require__(5);

	var _lifeCycle = __webpack_require__(3);

	exports.setState = function (state, spec) {
		document.getElementById('ui').innerHTML = '';

		_saveState.saveState(spec.time, state);
		_updateUi.updateUI(spec, spec.render(state));
		_lifeCycle.lifeCycle(spec);
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var keys = __webpack_require__(2);

	module.exports = function hasSymbols() {
		if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
		if (typeof Symbol.iterator === 'symbol') { return true; }

		var obj = {};
		var sym = Symbol('test');
		if (typeof sym === 'string') { return false; }
		if (sym instanceof Symbol) { return false; }
		obj[sym] = 42;
		for (sym in obj) { return false; }
		if (keys(obj).length !== 0) { return false; }
		if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

		if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

		var syms = Object.getOwnPropertySymbols(obj);
		if (syms.length !== 1 || syms[0] !== sym) { return false; }

		if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

		if (typeof Object.getOwnPropertyDescriptor === 'function') {
			var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
			if (descriptor.value !== 42 || descriptor.enumerable !== true) { return false; }
		}

		return true;
	};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// modified from https://github.com/es-shims/es6-shim
	var keys = __webpack_require__(2);
	var canBeObject = function (obj) {
		return typeof obj !== 'undefined' && obj !== null;
	};
	var hasSymbols = __webpack_require__(7)();
	var defineProperties = __webpack_require__(9);
	var toObject = Object;
	var push = Array.prototype.push;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	var assignShim = function assign(target, source1) {
		if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
		var objTarget = toObject(target);
		var s, source, i, props, syms;
		for (s = 1; s < arguments.length; ++s) {
			source = toObject(arguments[s]);
			props = keys(source);
			if (hasSymbols && Object.getOwnPropertySymbols) {
				syms = Object.getOwnPropertySymbols(source);
				for (i = 0; i < syms.length; ++i) {
					if (propIsEnumerable.call(source, syms[i])) {
						push.call(props, syms[i]);
					}
				}
			}
			for (i = 0; i < props.length; ++i) {
				objTarget[props[i]] = source[props[i]];
			}
		}
		return objTarget;
	};

	defineProperties(assignShim, {
		shim: function shimObjectAssign() {
			var assignHasPendingExceptions = function () {
				if (!Object.assign || !Object.preventExtensions) {
					return false;
				}
				// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
				// which is 72% slower than our shim, and Firefox 40's native implementation.
				var thrower = Object.preventExtensions({ 1: 2 });
				try {
					Object.assign(thrower, 'xy');
				} catch (e) {
					return thrower[1] === 'y';
				}
			};
			defineProperties(
				Object,
				{ assign: assignShim },
				{ assign: assignHasPendingExceptions }
			);
			return Object.assign || assignShim;
		}
	});

	module.exports = assignShim;


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var keys = __webpack_require__(2);
	var foreach = __webpack_require__(10);
	var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';

	var toStr = Object.prototype.toString;

	var isFunction = function (fn) {
		return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
	};

	var arePropertyDescriptorsSupported = function () {
		var obj = {};
		try {
			Object.defineProperty(obj, 'x', { value: obj, enumerable: false });
	        /* eslint-disable no-unused-vars */
	        for (var _ in obj) { return false; }
	        /* eslint-enable no-unused-vars */
			return obj.x === obj;
		} catch (e) { /* this is IE 8. */
			return false;
		}
	};
	var supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();

	var defineProperty = function (object, name, value, predicate) {
		if (name in object && (!isFunction(predicate) || !predicate())) {
			return;
		}
		if (supportsDescriptors) {
			Object.defineProperty(object, name, {
				configurable: true,
				enumerable: false,
				writable: true,
				value: value
			});
		} else {
			object[name] = value;
		}
	};

	var defineProperties = function (object, map) {
		var predicates = arguments.length > 2 ? arguments[2] : {};
		var props = keys(map);
		if (hasSymbols) {
			props = props.concat(Object.getOwnPropertySymbols(map));
		}
		foreach(props, function (name) {
			defineProperty(object, name, map[name], predicates[name]);
		});
	};

	defineProperties.supportsDescriptors = !!supportsDescriptors;

	module.exports = defineProperties;


/***/ },
/* 10 */
/***/ function(module, exports) {

	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toString = Object.prototype.toString;

	module.exports = function forEach (obj, fn, ctx) {
	    if (toString.call(fn) !== '[object Function]') {
	        throw new TypeError('iterator must be a function');
	    }
	    var l = obj.length;
	    if (l === +l) {
	        for (var i = 0; i < l; i++) {
	            fn.call(ctx, obj[i], i, obj);
	        }
	    } else {
	        for (var k in obj) {
	            if (hasOwn.call(obj, k)) {
	                fn.call(ctx, obj[k], k, obj);
	            }
	        }
	    }
	};



/***/ },
/* 11 */
/***/ function(module, exports) {

	'use strict';

	var toStr = Object.prototype.toString;

	module.exports = function isArguments(value) {
		var str = toStr.call(value);
		var isArgs = str === '[object Arguments]';
		if (!isArgs) {
			isArgs = str !== '[object Array]' &&
				value !== null &&
				typeof value === 'object' &&
				typeof value.length === 'number' &&
				value.length >= 0 &&
				toStr.call(value.callee) === '[object Function]';
		}
		return isArgs;
	};


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _setState = __webpack_require__(6);

	exports.createComponent = function (spec, rootNode) {
		spec._svenjs = { rootNode: {} };
		if (!spec.isBound) {
			//console.log('binding');
			spec.isBound = true;

			spec.setState = function (state) {
				return _setState.setState(state, this);
			};

			spec.jsx = function (parts) {
				console.log('this.jsx');
				console.log(this);
				console.log(parts);
				//return parts;
			};
		}

		if (!spec.isMounted) {
			spec.time = { history: [], pos: -1 };
			spec.isMounted = true;
			if (undefined !== spec.initialState) {
				spec.state = spec.initialState;
			}
		}

		if (spec.isMounted) {
			if ('function' === typeof spec.componentDidMount) {
				spec.componentDidMount.apply(spec);
			}

			if ('function' === typeof spec.render) {
				console.log('applying render');
				//console.log(spec.render);
				document.getElementById('ui').innerHTML = '';
				spec.render.apply(spec);
			}
		}
		return spec;
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	//import {updateUI} from './update-ui';
	'use strict';

	var _arguments = arguments;
	var assign = __webpack_require__(8);
	var RESERVED_PROPS = {
	  key: true,
	  ref: true
	};

	/**
	 * Base constructor for all Svenjs elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */

	var SvenjsElement = function SvenjsElement(type, key, ref, owner, props) {
	  // Built-in properties that belong on the element
	  this.type = type;
	  this.key = key;
	  this.ref = ref;
	  // Record the component responsible for creating this element.
	  this._owner = owner;
	  this.props = props;
	  console.log(this);
	};

	exports.createElement = function (type, config, children) {
	  //	console.log('create-element');
	  //	console.log(parts);
	  /* let docFragment = document.createDocumentFragment();
	   let el = document.createElement(type);
	   //console.log(parts);
	   if(config){
	   	//console.log(config);
	   	if(config.hasOwnProperty('onClick')) 
	   		el.onclick = config.onClick;
	  if(config.hasOwnProperty('disabled')) 
	   		if(config.disabled !== "false") el.disabled = config.disabled;
	   	
	  if(config.hasOwnProperty('id')){ 
	   		el.id = config.id;
	   		}
	   	
	   }
	   if(children){
	   el.appendChild(document.createTextNode(children));
	   }
	       //if(parts[3]){
	   //	el.appendChild(document.createTextNode(parts[3]));
	   //}
	   docFragment.appendChild(el);
	    document.getElementById('ui').appendChild(docFragment);
	   */
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = _arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = _arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return new SvenjsElement(type, key, ref, 'ui', props);
	};

/***/ },
/* 14 */
/***/ function(module, exports) {

	//import {updateUI} from './update-ui';
	'use strict';

	exports.jsx = function () {
	  for (var _len = arguments.length, parts = Array(_len), _key = 0; _key < _len; _key++) {
	    parts[_key] = arguments[_key];
	  }

	  console.log('jsx');

	  console.log(parts);
	  var docFragment = document.createDocumentFragment();
	  var el = document.createElement(parts[0]);
	  //console.log(parts);
	  if (parts[1]) {
	    //console.log(parts[1]);
	    if (parts[1].hasOwnProperty('onClick')) el.onclick = parts[1].onClick;

	    if (parts[1].hasOwnProperty('disabled')) if (parts[1].disabled !== 'false') el.disabled = parts[1].disabled;

	    if (parts[1].hasOwnProperty('id')) {
	      el.id = parts[1].id;
	    }
	  }
	  if (parts[2]) {
	    el.appendChild(document.createTextNode(parts[2]));
	  }
	  if (parts[3]) {
	    el.appendChild(document.createTextNode(parts[3]));
	  }
	  docFragment.appendChild(el);

	  document.getElementById('ui').appendChild(docFragment);
	  //return updateUI(false,docFragment);
	  //    return updateUI(false,div);
	};

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _updateUi = __webpack_require__(1);

	//import {jsx} from './jsx';

	var jsx = function jsx(parts) {
	  console.log(parts);
	  return parts;
	};

	exports.render = function (spec, rootNode) {
	  console.log('render start');
	  console.log(spec.render());

	  spec._svenjs.rootNode = rootNode;
	  //console.log(jsx(spec.render));
	  _updateUi.updateUI(spec);
	  console.log('render done');
	};

	/*
	import {updateUI} from './update-ui';
	let _spec, _rootNode;
	exports.render = (spec, rootNode, html)=> {
	console.log('render start');
	console.log(spec);
	console.log(rootNode);
	console.log('render done');
	  spec = spec || _spec; _spec = spec;
	  rootNode = rootNode || _rootNode; if(!_rootNode) _rootNode=rootNode;
	  spec._svenjs.rootNode = rootNode;
	  if(html) return updateUI(spec,html); else return updateUI(spec);

	};
	*/

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _libDeepCopy = __webpack_require__(4);

	var _updateUi = __webpack_require__(1);

	var _lifeCycle = __webpack_require__(3);

	exports.timeTravel = function (spec, position) {
	  document.getElementById('ui').innerHTML = '';
	  var time = spec.time;
	  var state = spec.state;
	  time.pos += position;
	  state = _libDeepCopy.deepCopy(time.history[time.pos]);
	  spec.state = state;
	  _updateUi.updateUI(spec, spec.render(state), time);
	  _lifeCycle.lifeCycle(spec);
	};

/***/ },
/* 17 */
/***/ function(module, exports) {

	"use strict";

	exports.version = function () {
	  return "0.0.2-alpha";
	};

/***/ },
/* 18 */
/***/ function(module, exports) {

	"use strict";

	var _callbacks = [];
	exports.createStore = function (spec) {
		if (!spec.isMounted) {
			spec.listenTo = function (cb) {
				_callbacks.push(cb);
			};
			spec.emit = function (data) {
				_callbacks.forEach(function (cb) {
					cb(data);
				});
			};

			if ("function" === typeof spec.init) {
				spec.init.apply(spec);
			}
		}
		return spec;
	};

/***/ }
/******/ ])
});
;