!function(Q,F){if("object"==typeof exports&&"object"==typeof module)module.exports=F();else if("function"==typeof define&&define.amd)define([],F);else{var B=F();for(var U in B)("object"==typeof exports?exports:Q)[U]=B[U]}}(window,function(){return function(Q){var F={};function B(U){if(F[U])return F[U].exports;var s=F[U]={i:U,l:!1,exports:{}};return Q[U].call(s.exports,s,s.exports,B),s.l=!0,s.exports}return B.m=Q,B.c=F,B.d=function(Q,F,U){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:U})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(B.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var s in Q)B.d(U,s,function(F){return Q[F]}.bind(null,s));return U},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=1)}([function(module,exports){eval('module.exports = function (t) {\n  var n = {};\n\n  function e(o) {\n    if (n[o]) return n[o].exports;\n    var r = n[o] = {\n      i: o,\n      l: !1,\n      exports: {}\n    };\n    return t[o].call(r.exports, r, r.exports, e), r.l = !0, r.exports;\n  }\n\n  return e.m = t, e.c = n, e.d = function (t, n, o) {\n    e.o(t, n) || Object.defineProperty(t, n, {\n      enumerable: !0,\n      get: o\n    });\n  }, e.r = function (t) {\n    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n      value: "Module"\n    }), Object.defineProperty(t, "__esModule", {\n      value: !0\n    });\n  }, e.t = function (t, n) {\n    if (1 & n && (t = e(t)), 8 & n) return t;\n    if (4 & n && "object" == typeof t && t && t.__esModule) return t;\n    var o = Object.create(null);\n    if (e.r(o), Object.defineProperty(o, "default", {\n      enumerable: !0,\n      value: t\n    }), 2 & n && "string" != typeof t) for (var r in t) e.d(o, r, function (n) {\n      return t[n];\n    }.bind(null, r));\n    return o;\n  }, e.n = function (t) {\n    var n = t && t.__esModule ? function () {\n      return t.default;\n    } : function () {\n      return t;\n    };\n    return e.d(n, "a", n), n;\n  }, e.o = function (t, n) {\n    return Object.prototype.hasOwnProperty.call(t, n);\n  }, e.p = "", e(e.s = 0);\n}([function (t, n, e) {\n  t.exports = e(1);\n}, function (t, n, e) {\n  "use strict";\n\n  e.r(n);\n\n  function o(t) {\n    return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {\n      return typeof t;\n    } : function (t) {\n      return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;\n    })(t);\n  }\n\n  var r = function t(n) {\n    if (!n || "object" !== o(n)) return n;\n    var e = {};\n    return Array.isArray(n) ? e = n.map(function (n) {\n      return t(n);\n    }) : Object.keys(n).forEach(function (o) {\n      return e[o] = t(n[o]);\n    }), e;\n  };\n\n  function i(t) {\n    return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {\n      return typeof t;\n    } : function (t) {\n      return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;\n    })(t);\n  }\n\n  var u = function t(n) {\n    return Object.freeze(n), Object.getOwnPropertyNames(n).forEach(function (e) {\n      !n.hasOwnProperty(e) || null === n[e] || "object" !== i(n[e]) && "function" != typeof n[e] || Object.isFrozen(n[e]) || t(n[e]);\n    }), n;\n  },\n      c = function (t, n) {\n    var e = r(n);\n    return u(e), e;\n  },\n      f = {}.toString,\n      a = function (t) {\n    return "function" == typeof t;\n  },\n      s = function (t) {\n    return "[object Object]" === f.call(t);\n  },\n      l = function (t) {\n    return "[object Array]" === f.call(t);\n  },\n      p = function () {\n    var t = function () {\n      return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);\n    };\n\n    return "".concat(t() + t(), "-").concat(t());\n  };\n\n  function d(t) {\n    return (d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {\n      return typeof t;\n    } : function (t) {\n      return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;\n    })(t);\n  }\n\n  var y = function (t, n) {\n    return n.appendChild(t);\n  },\n      b = Object.prototype.hasOwnProperty,\n      m = function (t, n) {\n    if (b.call(t, "children") && l(t.children) && t.children.forEach(function (t) {\n      "string" != typeof t && "number" != typeof t || n.appendChild(document.createTextNode(t));\n    }), b.call(t, "attrs")) {\n      var e = t.attrs;\n\n      for (var o in e) if ("config" !== o && "key" !== o && ("disabled" !== o || !1 !== e[o])) if ("class" == o || "className" == o) n.className = e[o].toString();else if (a(e[o]) && "on" == o.slice(0, 2)) n[o.toLowerCase()] = e[o];else {\n        if ("checked" === o && (!1 === e[o] || "" === e[o])) continue;\n\n        try {\n          n.setAttribute("" + o, e[o].toString());\n        } catch (t) {\n          console.error("e", t);\n        }\n      }\n    }\n\n    return n;\n  },\n      v = function (t) {\n    void 0 === t.tag && (t.tag = "span", t.attrs = {\n      sjxid: p()\n    });\n    var n = document.createElement(t.tag);\n    return m(t, n), n;\n  },\n      j = function (t, n) {\n    var e = document.createDocumentFragment(),\n        o = document.createElement(t.tag);\n    m(t, n.rootNode);\n\n    var r = function t(n, e) {\n      var o;\n      return b.call(n, "children") ? l(n.children) && n.children.forEach(function (n) {\n        null !== n && "object" === d(n) && (o = v(n), t(n, o), y(o, e)), l(n) && n.forEach(function (n) {\n          b.call(n, "render") || (o = v(n), t(n, o), y(o, e));\n        });\n      }) : "object" === d(n) && b.call(n, "render") && t(n.render(), e), e;\n    }(t, o);\n\n    return e.appendChild(r), e;\n  },\n      h = function (t, n) {\n    var e,\n        o = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n    if (!n) return "Error: No node to attach";\n    s(t) && (b.call(t, "_svenjs") || (t._svenjs = {\n      rootNode: !1\n    }), t._svenjs.rootNode = n), n.innerHTML = "", e = s(o) ? o : t.render(), n.appendChild(j(e, t._svenjs));\n  },\n      S = function (t) {\n    var n;\n    t._svenjs.rootNode && (n = t._svenjs.rootNode), t.hasOwnProperty("attrs") && t.attrs.hasOwnProperty("sjxid") && (n || (n = document.querySelector("[sjxid=\'" + t.attrs.sjxid + "\']"))), t.isMounted && (h(t, n), t.hasOwnProperty("_didUpdate") && t._didUpdate.apply(t));\n  },\n      g = function (t, n) {\n    n.state = c(n, t), S(n);\n  },\n      O = function (t, n) {\n    var e = r(t);\n    return e._svenjs = {\n      rootNode: !1\n    }, e.isBound = !1, e.isMounted = !1, e.props = {}, n && (e._jsxid = e.props.sjxid, e.props = n, setTimeout(function () {\n      return S(e);\n    }, 0), delete e.props.sjxid), e.hasOwnProperty("attrs") || e.hasOwnProperty("attrs") || (e.attrs = {\n      sjxid: p()\n    }), e.isBound || (e.version = "2.0.1", e.isBound = !0, e.setState = function (t) {\n      return g(t, this);\n    }, "function" == typeof e._beforeMount && e._beforeMount.apply(e)), e.isMounted || (e.isMounted = !0, void 0 !== e.initialState && (e.state = e.initialState), "function" == typeof e._didMount && (e._didMount.apply(e), "function" == typeof S && setTimeout(function () {\n      return S(e);\n    }, 100))), e;\n  },\n      _ = [],\n      M = function (t) {\n    return t.isMounted || (t.listenTo = function (t) {\n      _.push(t);\n    }, t.emit = function (t) {\n      _.forEach(function (n) {\n        n(t);\n      });\n    }, "function" == typeof t.init && t.init.apply(t)), t;\n  };\n\n  console.info("Running svenjs version ".concat("2.0.1"));\n  var x = {\n    version: "2.0.1",\n    create: O,\n    setState: g,\n    createStore: M,\n    render: h,\n    renderToString: function (t, n) {\n      return j(t, n).innerHTML;\n    },\n    lifeCycle: S\n  };\n  n.default = x;\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},function(Q,F,B){Q.exports=B(2)},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/svenjs/index.js\nvar svenjs = __webpack_require__(0);\nvar svenjs_default = /*#__PURE__*/__webpack_require__.n(svenjs);\n\n// CONCATENATED MODULE: ./src/app.jsx\n\nlet ENTER_KEY = 13;\nlet ESCAPE_KEY = 27;\nlet _toggled=false;\nlet _prevEditing=false;\nlet _currentEdit=0;\n\nfunction deepCopy (o) {\n\treturn JSON.parse(JSON.stringify(o));\n};\n\n\nlet todoMVCApp = svenjs_default.a.create({\n    initialState: {\n        messages:[\n          {id:1,message:"Answer all the mail",complete:false,editing:false},\n          {id:2,message:"Get a cup of coffee",complete:false,editing:false}\n        ]\n    },\n    _didUpdate(){\n      let node= document.getElementById(\'new-todo\');\n      if(node!==null && _prevEditing){\n        _prevEditing=false;\n        node.focus();\n        node.setSelectionRange(node.value.length, node.value.length);\n      }\n    },\n    _didMount(){\n      var url = self.history === true ? self.getPath() : window.location.hash.replace(/.*#\\//, \'\');\n      this.setState({messages:this.state.messages,url:url});\n      window.addEventListener("hashchange", this.onHashChange.bind(this), false);\n    },\n    handleEditTodoKeyDown(e){\n\n      if (e.keyCode === ESCAPE_KEY) {\n        this.simpleResetEditing();\n        return;\n      }\n      if (e.keyCode !== ENTER_KEY) {\n          return;\n      }\n      this.saveTodo(e);\n      this.resetEditing();\n      e.preventDefault();\n    },\n    handleNewTodoKeyDown(id,e) {\n      if (e.keyCode !== ENTER_KEY) {\n        return;\n      }\n      this.addTodo(e);\n      e.innerHTML="";\n      document.getElementById(id).focus();\n      e.preventDefault();\n    },\n    onHashChange(){\n        var url = self.history === true ? self.getPath() : window.location.hash.replace(/.*#\\//, \'\');\n        this.resetEditing();\n        this.setState({messages:this.state.messages,url:url});\n    },\n    saveTodo(e){\n      let val = "undefined" === typeof e.srcElement ? e.target.value : e.srcElement.value;\n      let messages=this.state.messages.filter((msg)=>{\n        if(msg.id === _currentEdit) msg.message=val;\n        return msg\n      })\n      this.setState({messages:messages, url:this.state.url});\n    },\n    addTodo(e){\n      let messages=deepCopy(this.state.messages);\n      let lastId;\n      let val = "undefined" === typeof e.srcElement ? e.target.value : e.srcElement.value;\n      if(messages.length===0) lastId=1;\n      else lastId=messages[messages.length-1].id;\n      messages.push({id:lastId+1, message:val , complete: false, editing:false});\n      this.setState({messages:messages, url:this.state.url});\n    },\n    destroyMessage(item){\n      let messages=this.state.messages.filter((msg)=>{\n        return msg.id!==item.id\n      })\n      this.setState({messages:messages});\n    },\n    destroyCompleted(){\n\t    let _messages=deepCopy(this.state.messages);\n\t    let messages=_messages.filter((msg)=>{\n        return msg.complete===false\n      })\n      this.resetEditing();\n      this.setState({messages:messages, url:this.state.url});\n    },\n    toggleOne(item,e){\n\t    let _messages=deepCopy(this.state.messages);\n\t    let messages=_messages.filter((msg)=>{\n        if(msg.id === item.id) msg.complete=!msg.complete;\n        return msg\n      })\n      this.resetEditing();\n      this.setState({messages:messages, url:this.state.url})\n    },\n    simpleResetEditing(){\n\t    let _messages=deepCopy(this.state.messages);\n      let messages=_messages.map((msg)=>{\n        msg.editing = false;\n        return msg\n      });\n      _prevEditing=false;\n      this.setState({messages:messages, url:this.state.url});\n    },\n    resetEditing(e){\n      let update=false;\n\t    let _messages=deepCopy(this.state.messages);\n\n\t    let messages=_messages.map((msg)=>{\n        if(msg.editing) update=true;\n        msg.editing = false;\n        return msg\n      })\n      if(update) {\n        _prevEditing=true;\n        this.setState({messages:messages, url:this.state.url});\n      } else {\n        _prevEditing=false;\n      }\n    },\n    onDoubleClick(todo,e){\n      _currentEdit=todo.id;\n\t    let _messages=deepCopy(this.state.messages);\n\n\t    if(!todo.complete){\n        let messages=_messages.map((msg)=>{\n           msg.editing = msg.id===todo.id ? !msg.editing : false;\n          return msg\n        })\n        this.setState({messages:messages, url:this.state.url});\n        let node= document.getElementsByClassName(\'edit active\')[0];\n        node.focus();\n        node.setSelectionRange(node.value.length, node.value.length);\n      }\n    },\n    toggleAll(){\n      _toggled=!_toggled;\n\t    let _messages=deepCopy(this.state.messages);\n\n\t    let messages=_messages.map((msg)=>{\n        msg.complete=_toggled;\n        return msg;\n      })\n      this.resetEditing();\n      this.setState({messages:messages});\n    },\n    listTodos(){\n\t    let _messages=deepCopy(this.state.messages);\n\n      let shownTodos =_messages.filter( (todo) => {\n        switch (this.state.url) {\n        case "active":\n          return !todo.complete;\n        case "completed":\n          return todo.complete;\n        default:\n          return true;\n        }\n      }, this);\n\n      return shownTodos.map((todo)=>{\n        let label= todo.message;\n        let checked=false;\n        let className="todo";\n        let editClassName="edit";\n        if(todo.editing){\n          className="todo editing";\n          editClassName="edit active";\n          }\n        if(todo.complete) {\n          label= {tag: "del", attrs: {sjxid: "1518.2286890602463"}, children: [todo.message]};\n          checked=true;\n        }\n        return  {tag: "li", attrs: {sjxid: "1840.8051627115522", className:className}, children: [\n               {tag: "div", attrs: {sjxid: "914.1524407588744", className:"view"}, children: [\n                 {tag: "input", attrs: {sjxid: "355.0695572358227", className:"toggle", type:"checkbox", checked:checked, onClick:this.toggleOne.bind(this,todo)}}, \n                 {tag: "label", attrs: {sjxid: "662.5579862463558", ondblclick:this.onDoubleClick.bind(this, todo)}, children: [label]}, \n                 {tag: "button", attrs: {sjxid: "1197.6738683496965", className:"destroy", onClick:this.destroyMessage.bind(this,todo)}}\n               ]}, \n               {tag: "input", attrs: {sjxid: "355.17151170803805", className:editClassName, \n                type:"text", \n                onKeyDown:this.handleEditTodoKeyDown.bind(this), \n                value:todo.message}}\n             ]}\n      })\n    },\n    render(){\n      var state=this.state;\n      let selected_all="", selected_active="", selected_completed="";\n      if(this.state.url==="" || this.state.url==="all") selected_all=\'selected\';\n      if(this.state.url==="active") selected_active=\'selected\';\n      if(this.state.url==="completed") selected_completed=\'selected\';\n\n      return ({tag: "section", attrs: {sjxid: "1870.7477715273747", class:"todoapp"}, children: [\n                {tag: "header", attrs: {sjxid: "935.7480264424067", class:"header"}, children: [\n                  {tag: "h1", attrs: {sjxid: "407.4904262163948"}, children: ["todos"]}, \n                  {tag: "input", attrs: {sjxid: "961.573193666482", className:"new-todo", \n                    id:"new-todo", \n                    onClick:this.resetEditing.bind(this), \n                    onKeyDown:this.handleNewTodoKeyDown.bind(this,"new-todo"), \n                    placeholder:"What needs to be done?", autofocus:true}}\n                ]}, \n                {tag: "section", attrs: {sjxid: "1708.1073366349292", className:"main"}, children: [\n                  {tag: "input", attrs: {sjxid: "377.218051485297", className:"toggle-all", type:"checkbox", onClick:this.toggleAll.bind(this)}}, \n                  {tag: "label", attrs: {sjxid: "1239.719952832457", for:"toggle-all"}, children: ["Mark all as complete"]}, \n                  {tag: "ul", attrs: {sjxid: "629.0738323284276", className:"todo-list"}, children: [\n                    this.listTodos()\n                  ]}\n                ]}, \n\n                {tag: "footer", attrs: {sjxid: "64.65048333615809", class:"footer"}, children: [\n                  {tag: "span", attrs: {sjxid: "346.1149865891482", class:"todo-count"}, children: [this.state.messages.length, \n                    this.state.messages.length === 1 ? " item" : " items", " remaining"]}, \n\n                  {tag: "ul", attrs: {sjxid: "1834.217367953375", class:"filters"}, children: [\n                      {tag: "li", attrs: {sjxid: "1609.9858488952225"}, children: [\n                          {tag: "a", attrs: {sjxid: "1349.1201049721471", href:"#/all", class:selected_all}, children: ["All"]}\n                      ]}, \n                      {tag: "li", attrs: {sjxid: "1506.5758042002187"}, children: [\n                          {tag: "a", attrs: {sjxid: "834.9005393664171", href:"#/active", class:selected_active}, children: ["Active"]}\n                      ]}, \n                      {tag: "li", attrs: {sjxid: "228.50339311771384"}, children: [\n                          {tag: "a", attrs: {sjxid: "650.8735758454814", href:"#/completed", class:selected_completed}, children: ["Completed"]}\n                      ]}\n                  ]}, \n                  {tag: "button", attrs: {sjxid: "1838.6036827222338", class:"clear-completed", onClick:this.destroyCompleted.bind(this)}, children: ["Clear completed"]}\n                ]}\n        ]});\n    }\n\n});\n/* harmony default export */ var app = (todoMVCApp);\n\n// CONCATENATED MODULE: ./src/index.jsx\n\n\nconst rootNode = document.getElementById(\'myapp\');\nsvenjs_default.a.render(\n  app,\n  rootNode\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')}])});